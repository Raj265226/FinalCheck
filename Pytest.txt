                # Assert that a certain exception
import pytest
def f():
    raise SystemExit(1)         -- 1 is input

def test_mytest():
    with pytest.raises(SystemExit, match="1"):    -- also matching the value
        f()
                # Assert
class TestClass:
    def test_one(self):
        x = "this"
        assert "h" in x

            # Markers
pytest.ini -
addopts = --strict-markers                    # Other markers will raise error as its not on this file
[pytest]
markers =
            sanity
            regression
Pytho.py -
import pytest
class TestClass:
    @pytest.mark.skip(reason="test purpose")
    def test_one(self):
        x = "this"
        print("1")
        assert "h" in x

    @pytest.mark.sanity
    def test_two(self):
        x = "this"
        print("2")
        assert "h" in x

Run command -  pytest -v -s -m "sanity" Pytho.py
                # Fixtures
import pytest
@pytest.fixture(autouse=true)
def sample_data():
    return [1, 2, 3, 4, 5]

def test_sum(sample_data):                                   # Use the fixture in a test
    assert sum(sample_data) == 15
